@inject NavigationManager NavigationManager
@inject IDeleteProductUseCase DeleteProductUseCase


@if (this.Product is not null)
{
    <tr>
        <td>@Product.Name</td>
        <td>@Product.Quantity</td>
        <td>@Product.Price.ToString("c")</td>
        <td>
            <a href="/products/edit/@Product.Id" class="btn btn-light">Edit</a>
        </td>
        <td>
            <button type="button" class="btn btn-light" @onclick="async () => { await HandleDelete(Product.Id); }">Delete</button>
        </td>
    </tr>
}

@code {

    [Parameter]
    public Product? Product { get; set; }

    private async Task HandleDelete(int productId)
    {
        await DeleteProductUseCase.ExecuteAsync(productId);
        this.Product = null;
        // StateHasChanged();
    }
}
